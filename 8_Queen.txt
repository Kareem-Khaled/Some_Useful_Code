/*
¦¦+  ¦¦+   ¦¦+  ¦¦+¦¦+  ¦¦+ ¦¦¦¦¦+ ¦¦+     ¦¦¦¦¦¦¦+¦¦¦¦¦¦+
¦¦¦ ¦¦++   ¦¦¦ ¦¦++¦¦¦  ¦¦¦¦¦+--¦¦+¦¦¦     ¦¦+----+¦¦+--¦¦+
¦¦¦¦¦++    ¦¦¦¦¦++ ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦     ¦¦¦¦¦+  ¦¦¦  ¦¦¦
¦¦+-¦¦+    ¦¦+-¦¦+ ¦¦+--¦¦¦¦¦+--¦¦¦¦¦¦     ¦¦+--+  ¦¦¦  ¦¦¦
¦¦¦  ¦¦+¦¦+¦¦¦  ¦¦+¦¦¦  ¦¦¦¦¦¦  ¦¦¦¦¦¦¦¦¦¦+¦¦¦¦¦¦¦+¦¦¦¦¦¦++
+-+  +-++-++-+  +-++-+  +-++-+  +-++------++------++-----+
*/
#define _CRT_SECURE_NO_WARNINGS
#include<bits/stdc++.h>
#include<unordered_map>
#define endl "\n"
#define Ceil(x,y) ((x+y-1)/y)
#define ss cout<<endl;system("pause");
#define all(v) v.begin(),v.end()
#define allr(s) s.rbegin(),s.rend()
#define rt(s) return cout<<s,0
#define watch(x) cout<<(#x)<<" = "<<x<<endl
#define sz(s)	(int)(s.size())
const int oo = 0x3f3f3f3f, mod = 1e9 + 7;
using namespace std;
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
//x = xDegrees*3.14159265 / 180;
//r.erase(remove(all(r), '&'), r.end());
//ef1tn=(( (n / 2)*( (n / 2) + 1) / 2) * 2);
//of1tn=(n * (n + 1) / 2 - 2 * ((n / 2) * (n / 2 + 1) / 2));
int dx[] { 1, -1, 0, 0, 1, 1, -1, -1 };
int dy[] { 0, 0, 1, -1, 1, -1, 1, -1 };
ll OO = (1LL * oo*oo);
void K_K()
{
#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
#endif  !ONLINEJUDGE
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
}
ll gcd(ll a, ll b)
{
	return b == 0 ? abs(a) : gcd(b, a % b);
}
ll lcm(ll a, ll b)
{
	return a / gcd(a, b) * b;
}
int v[100][100];
const int mx = 8;
int ithrow[mx][mx];
int c = 0;
bool col[mx], rdig[2 * mx + 1], ldig[2 * mx + 1];
void solve(int r){
	if (r == 8){
		c++;
		for (int i = 0; i < mx; i++){
			for (int j = 0; j < mx; j++){
				cout << ithrow[i][j] << " ";
			}
			cout << endl;
		}
		cout << endl << endl;
		return;
	}
	for (int c = 0; c < 8; c++){
		if (!col[c] && !rdig[c + r] && !ldig[mx + c - r]){
			ithrow[r][c] = 1;
			col[c] = 1; rdig[c + r] = 1; ldig[mx + c - r] = 1;
			solve(r + 1);
			col[c] = 0; rdig[c + r] = 0; ldig[mx + c - r] = 0;
			ithrow[r][c] = 0;
		}
	}
}

int main(){
	K_K();
	int t;
	cin >> t;
	while (t--){
		for (int i = 0; i < 8; i++)
		for (int j = 0; j < 8; j++)
			cin >> v[i][j];
	}
	solve(0);

}